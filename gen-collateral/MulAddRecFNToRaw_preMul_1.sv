// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module MulAddRecFNToRaw_preMul_1(
  input  [1:0]   io_op,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  input  [64:0]  io_a,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_b,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_c,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output [52:0]  io_mulAddA,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_mulAddB,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output [105:0] io_mulAddC,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output         io_toPostMul_isSigNaNAny,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isNaNAOrB,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isInfA,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isZeroA,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isInfB,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isZeroB,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_signProd,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isNaNC,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isInfC,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_isZeroC,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output [12:0]  io_toPostMul_sExpSum,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output         io_toPostMul_doSubMags,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
                 io_toPostMul_CIsDominant,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output [5:0]   io_toPostMul_CDom_CAlignDist,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output [54:0]  io_toPostMul_highAlignedSigC,	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
  output         io_toPostMul_bit0AlignedSigC	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16]
);

  wire         rawA_isNaN = (&(io_a[63:62])) & io_a[61];	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}]
  wire         rawB_isNaN = (&(io_b[63:62])) & io_b[61];	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}]
  wire         rawC_isNaN = (&(io_c[63:62])) & io_c[61];	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}]
  wire         signProd = io_a[64] ^ io_b[64] ^ io_op[1];	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:96:{42,49}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:59:25]
  wire [13:0]  _sExpAlignedProd_T_1 = {2'h0, io_a[63:52]} + {2'h0, io_b[63:52]} - 14'h7C8;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:99:{19,32}, generators/hardfloat/hardfloat/src/main/scala/primitives.scala:123:57, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21]
  wire         doSubMags = signProd ^ io_c[64] ^ io_op[0];	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:96:42, :101:{42,49}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:59:25]
  wire [13:0]  _sNatCAlignDist_T = _sExpAlignedProd_T_1 - {2'h0, io_c[63:52]};	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:99:32, :105:42, generators/hardfloat/hardfloat/src/main/scala/primitives.scala:123:57, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21]
  wire         isMinCAlign = ~(|(io_a[63:61])) | ~(|(io_b[63:61])) | $signed(_sNatCAlignDist_T) < 14'sh0;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:105:42, :107:{50,69}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}]
  wire         CIsDominant = (|(io_c[63:61])) & (isMinCAlign | _sNatCAlignDist_T[12:0] < 13'h36);	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:105:42, :106:42, :107:50, :109:{23,39,60}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}]
  wire [7:0]   CAlignDist = isMinCAlign ? 8'h0 : _sNatCAlignDist_T[12:0] < 13'hA1 ? _sNatCAlignDist_T[7:0] : 8'hA1;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:105:42, :106:42, :107:50, :111:12, :113:{16,34}, :114:33]
  wire [164:0] mainAlignedSigC = $signed($signed({doSubMags ? {1'h1, ~(|(io_c[63:61])), ~(io_c[51:0])} : {1'h0, |(io_c[63:61]), io_c[51:0]}, {111{doSubMags}}}) >>> CAlignDist);	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:101:42, :107:69, :111:12, :119:{13,25,46,53,100}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :61:{44,49}]
  wire [64:0]  reduced4CExtra_shift = $signed(65'sh10000000000000000 >>> CAlignDist[7:2]);	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:111:12, :123:28, generators/hardfloat/hardfloat/src/main/scala/primitives.scala:76:56]
  wire [12:0]  _GEN = {|(io_c[51:48]), |(io_c[47:44]), |(io_c[43:40]), |(io_c[39:36]), |(io_c[35:32]), |(io_c[31:28]), |(io_c[27:24]), |(io_c[23:20]), |(io_c[19:16]), |(io_c[15:12]), |(io_c[11:8]), |(io_c[7:4]), |(io_c[3:0])} & {reduced4CExtra_shift[24], reduced4CExtra_shift[25], reduced4CExtra_shift[26], reduced4CExtra_shift[27], reduced4CExtra_shift[28], reduced4CExtra_shift[29], reduced4CExtra_shift[30], reduced4CExtra_shift[31], reduced4CExtra_shift[32], reduced4CExtra_shift[33], reduced4CExtra_shift[34], reduced4CExtra_shift[35], reduced4CExtra_shift[36]};	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:121:68, generators/hardfloat/hardfloat/src/main/scala/primitives.scala:76:56, :77:20, :78:22, :120:{33,54}]
  assign io_mulAddA = {|(io_a[63:61]), io_a[51:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:140:16, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :61:49]
  assign io_mulAddB = {|(io_b[63:61]), io_b[51:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:141:16, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :61:49]
  assign io_mulAddC = mainAlignedSigC[108:3];	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:119:100, :142:30]
  assign io_toPostMul_isSigNaNAny = rawA_isNaN & ~(io_a[51]) | rawB_isNaN & ~(io_b[51]) | rawC_isNaN & ~(io_c[51]);	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:145:58, generators/hardfloat/hardfloat/src/main/scala/common.scala:82:{46,49,56}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:56:33]
  assign io_toPostMul_isNaNAOrB = rawA_isNaN | rawB_isNaN;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:147:42, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:56:33]
  assign io_toPostMul_isInfA = (&(io_a[63:62])) & ~(io_a[61]);	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}]
  assign io_toPostMul_isZeroA = ~(|(io_a[63:61]));	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}]
  assign io_toPostMul_isInfB = (&(io_b[63:62])) & ~(io_b[61]);	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}]
  assign io_toPostMul_isZeroB = ~(|(io_b[63:61]));	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}]
  assign io_toPostMul_signProd = signProd;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:96:42]
  assign io_toPostMul_isNaNC = rawC_isNaN;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:56:33]
  assign io_toPostMul_isInfC = (&(io_c[63:62])) & ~(io_c[61]);	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}]
  assign io_toPostMul_isZeroC = ~(|(io_c[63:61]));	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}]
  assign io_toPostMul_sExpSum = CIsDominant ? {1'h0, io_c[63:52]} : _sExpAlignedProd_T_1[12:0] - 13'h35;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:99:32, :107:69, :109:23, :157:{12,53}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21]
  assign io_toPostMul_doSubMags = doSubMags;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:101:42]
  assign io_toPostMul_CIsDominant = CIsDominant;	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:109:23]
  assign io_toPostMul_CDom_CAlignDist = CAlignDist[5:0];	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:111:12, :160:47]
  assign io_toPostMul_highAlignedSigC = mainAlignedSigC[163:109];	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:119:100, :162:20]
  assign io_toPostMul_bit0AlignedSigC = doSubMags ? (&(mainAlignedSigC[2:0])) & ~(|_GEN) : (|(mainAlignedSigC[2:0])) | (|_GEN);	// @[generators/hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:101:42, :119:100, :121:68, :129:11, :132:16, :133:{32,39,44,47}, :134:{39,44}]
endmodule

