// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module Arbiter(
  output       io_in_0_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_0_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_0_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_1_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_1_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_1_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_2_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_2_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_2_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_3_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_3_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_3_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_4_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_4_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_4_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_5_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_5_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_5_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_6_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_6_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_6_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_7_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_7_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_7_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_8_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_8_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_8_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_9_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_9_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_9_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_10_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_10_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_10_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_11_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_11_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_11_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_12_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_12_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_12_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_13_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_13_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_13_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_14_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_14_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_14_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_in_15_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_in_15_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input  [5:0] io_in_15_bits_idx,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  input        io_out_ready,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output       io_out_valid,	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
  output [5:0] io_out_bits_idx	// @[src/main/scala/chisel3/util/Arbiter.scala:134:14]
);

  wire _grant_T = io_in_0_valid | io_in_1_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_1 = _grant_T | io_in_2_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_2 = _grant_T_1 | io_in_3_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_3 = _grant_T_2 | io_in_4_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_4 = _grant_T_3 | io_in_5_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_5 = _grant_T_4 | io_in_6_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_6 = _grant_T_5 | io_in_7_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_7 = _grant_T_6 | io_in_8_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_8 = _grant_T_7 | io_in_9_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_9 = _grant_T_8 | io_in_10_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_10 = _grant_T_9 | io_in_11_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_11 = _grant_T_10 | io_in_12_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _grant_T_12 = _grant_T_11 | io_in_13_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  wire _io_out_valid_T = _grant_T_12 | io_in_14_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68]
  assign io_in_0_ready = io_out_ready;
  assign io_in_1_ready = ~io_in_0_valid & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:78, :147:19]
  assign io_in_2_ready = ~_grant_T & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_3_ready = ~_grant_T_1 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_4_ready = ~_grant_T_2 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_5_ready = ~_grant_T_3 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_6_ready = ~_grant_T_4 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_7_ready = ~_grant_T_5 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_8_ready = ~_grant_T_6 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_9_ready = ~_grant_T_7 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_10_ready = ~_grant_T_8 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_11_ready = ~_grant_T_9 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_12_ready = ~_grant_T_10 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_13_ready = ~_grant_T_11 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_14_ready = ~_grant_T_12 & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_in_15_ready = ~_io_out_valid_T & io_out_ready;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:{68,78}, :147:19]
  assign io_out_valid = _io_out_valid_T | io_in_15_valid;	// @[src/main/scala/chisel3/util/Arbiter.scala:45:68, :148:31]
  assign io_out_bits_idx = io_in_0_valid ? io_in_0_bits_idx : io_in_1_valid ? io_in_1_bits_idx : io_in_2_valid ? io_in_2_bits_idx : io_in_3_valid ? io_in_3_bits_idx : io_in_4_valid ? io_in_4_bits_idx : io_in_5_valid ? io_in_5_bits_idx : io_in_6_valid ? io_in_6_bits_idx : io_in_7_valid ? io_in_7_bits_idx : io_in_8_valid ? io_in_8_bits_idx : io_in_9_valid ? io_in_9_bits_idx : io_in_10_valid ? io_in_10_bits_idx : io_in_11_valid ? io_in_11_bits_idx : io_in_12_valid ? io_in_12_bits_idx : io_in_13_valid ? io_in_13_bits_idx : io_in_14_valid ? io_in_14_bits_idx : io_in_15_bits_idx;	// @[src/main/scala/chisel3/util/Arbiter.scala:137:15, :139:26, :141:19]
endmodule

