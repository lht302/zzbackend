// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module rowhammer(
  input          clock,
                 reset,
  output         io_din_ready,	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
  input          io_din_valid,	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
  input  [159:0] io_din_bits,	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
  input          io_valid_mem,	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
  output [39:0]  io_rowham_dmemaddr,	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
  output         io_rowham_corestalld,	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
                 io_rowham_req_valid,	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
  input  [7:0]   io_resp_tag	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
);

  reg  [9:0]      count;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21]
  reg             flashen;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:29:23]
  reg  [39:0]     addr;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21]
  reg  [2:0]      state;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20]
  reg             rowham_req_valid_cache;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:57:36]
  reg             rowham_req_valid_down;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:58:35]
  reg             rowham_req_valid_up;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:59:33]
  reg             rowham_req_valid_up2;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:60:34]
  reg             rowham_req_valid_up3;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:61:34]
  reg             rowham_req_valid_down_next;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:63:41]
  wire            _GEN = state == 3'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :71:14]
  wire            _GEN_0 = state == 3'h1;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :69:32, :71:14]
  wire            _GEN_1 = state == 3'h2;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :69:53, :71:14]
  wire            _GEN_2 = state == 3'h3;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :69:74, :71:14]
  wire            _GEN_3 = _GEN | _GEN_0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:59:33, :71:14]
  wire            _GEN_4 = state == 3'h4;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :69:92, :71:14]
  wire            _GEN_5 = state == 3'h5;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :69:111, :71:14]
  wire            _GEN_6 = state == 3'h6;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :69:129, :71:14]
  wire            _GEN_7 = count < 10'h3E8;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21, :32:13]
  wire            _GEN_8 = count == 10'h3E8;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21, :32:13, :35:19]
  wire [2:0]      _GEN_9 = _GEN_6 & io_valid_mem ? 3'h0 : state;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :71:14, :122:25, :123:15]
  wire [7:0][2:0] _GEN_10 = {{_GEN_9}, {_GEN_9}, {io_valid_mem ? 3'h6 : state}, {io_valid_mem ? 3'h5 : state}, {io_valid_mem ? 3'h4 : state}, {io_valid_mem ? 3'h3 : state}, {3'h2}, {flashen ? 3'h1 : state}};	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:29:23, :53:20, :69:{32,53,74,92,111,129}, :71:14, :75:20, :76:13, :84:13, :90:23, :92:11, :98:23, :100:11, :106:23, :108:11, :114:23, :116:11, :122:25, :123:15]
  always @(posedge clock) begin
    if (reset) begin
      count <= 10'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21]
      flashen <= 1'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:29:23]
      addr <= 40'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21]
      state <= 3'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20]
      rowham_req_valid_cache <= 1'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:57:36]
      rowham_req_valid_down <= 1'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:58:35]
      rowham_req_valid_up <= 1'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:59:33]
      rowham_req_valid_up2 <= 1'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:60:34]
      rowham_req_valid_up3 <= 1'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:61:34]
    end
    else begin
      if (io_din_valid) begin	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:8:14]
        if (_GEN_7)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:32:13]
          count <= count + 10'h1;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21, :33:20]
        else if (_GEN_8)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:35:19]
          count <= 10'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21]
      end
      flashen <= io_din_valid & ~_GEN_7 & _GEN_8;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:29:23, :31:19, :32:{13,21}, :34:13, :35:19, :36:3, :42:13]
      if (flashen)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:29:23]
        addr <= io_din_bits[39:0];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :48:24]
      state <= _GEN_10[state];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :71:14, :75:20, :84:13, :90:23, :98:23, :106:23, :114:23]
      if (~_GEN)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
        rowham_req_valid_cache <= _GEN_0 | ~_GEN_1 & rowham_req_valid_cache;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:57:36, :71:14, :83:30, :88:30]
      if (~(_GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_4)) begin	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:58:35, :71:14]
        if (_GEN_5)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_down <= io_valid_mem | rowham_req_valid_down;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:58:35, :114:23, :115:27]
        else	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_down <= ~_GEN_6 & rowham_req_valid_down;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:58:35, :71:14, :120:29]
      end
      if (~_GEN_3) begin	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:59:33, :71:14]
        if (_GEN_1)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_up <= io_valid_mem | rowham_req_valid_up;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:59:33, :90:23, :91:25]
        else	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_up <= ~_GEN_2 & rowham_req_valid_up;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:59:33, :71:14, :96:26]
      end
      if (~(_GEN | _GEN_0 | _GEN_1)) begin	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:60:34, :71:14]
        if (_GEN_2)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_up2 <= io_valid_mem | rowham_req_valid_up2;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:60:34, :98:23, :99:26]
        else	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_up2 <= ~_GEN_4 & rowham_req_valid_up2;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:60:34, :71:14, :104:27]
      end
      if (~(_GEN | _GEN_0 | _GEN_1 | _GEN_2)) begin	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:61:34, :71:14]
        if (_GEN_4)	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_up3 <= io_valid_mem | rowham_req_valid_up3;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:61:34, :106:23, :107:26]
        else	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:71:14]
          rowham_req_valid_up3 <= ~_GEN_5 & rowham_req_valid_up3;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:61:34, :71:14, :112:27]
      end
    end
    rowham_req_valid_down_next <= rowham_req_valid_down;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:58:35, :63:41]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;
        end
        count = _RANDOM[1'h0][9:0];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21]
        flashen = _RANDOM[1'h0][10];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21, :29:23]
        addr = {_RANDOM[1'h0][31:11], _RANDOM[1'h1][18:0]};	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:28:21, :46:21]
        state = _RANDOM[1'h1][22:20];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :53:20]
        rowham_req_valid_cache = _RANDOM[1'h1][23];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :57:36]
        rowham_req_valid_down = _RANDOM[1'h1][24];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :58:35]
        rowham_req_valid_up = _RANDOM[1'h1][25];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :59:33]
        rowham_req_valid_up2 = _RANDOM[1'h1][26];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :60:34]
        rowham_req_valid_up3 = _RANDOM[1'h1][27];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :61:34]
        rowham_req_valid_down_next = _RANDOM[1'h1][28];	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :63:41]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_din_ready = 1'h1;
  assign io_rowham_dmemaddr = _GEN_3 ? 40'h0 : _GEN_1 ? addr + 40'h800 : _GEN_2 ? addr + 40'h1000 : _GEN_4 ? addr + 40'h1BE8 : _GEN_5 ? addr + 40'h2000 : _GEN_6 ? addr : 40'h0;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:46:21, :55:34, :59:33, :71:14, :74:23, :81:23, :89:{23,31}, :97:{22,30}, :105:{22,30}, :113:{22,30}, :121:23]
  assign io_rowham_corestalld = state == 3'h1 | state == 3'h2 | state == 3'h3 | state == 3'h4 | state == 3'h5 | state == 3'h6;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:53:20, :69:{32,53,74,92,111,120,129}]
  assign io_rowham_req_valid = rowham_req_valid_cache | rowham_req_valid_down_next | rowham_req_valid_up | rowham_req_valid_up2 | rowham_req_valid_up3;	// @[generators/rocket-chip/src/main/scala/zzguard_rr/rowhammer.scala:57:36, :59:33, :60:34, :61:34, :63:41, :64:124]
endmodule

